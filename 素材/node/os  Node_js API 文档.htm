<!DOCTYPE HTML>
<!-- saved from url=(0028)http://nodejs.cn/api/os.html -->
<!DOCTYPE html PUBLIC "" ""><HTML lang="zh-cmn-Hans"><HEAD><META 
content="IE=11.0000" http-equiv="X-UA-Compatible">
   
<META charset="utf-8">   <TITLE>os | Node.js API 文档</TITLE>   <LINK href="os%20%20Node_js%20API%20文档_files/api.css" 
rel="stylesheet">   <LINK href="/static/favicon.png" rel="icon" type="image/png" 
sizes="32x32"> 
<META name="GENERATOR" content="MSHTML 11.00.9600.18639"></HEAD> 
<BODY class="alt apidoc" id="api-section-os">
<DIV class="clearfix" id="content">
<DIV class="interior" id="column2">
<DIV class="interior" id="intro"><A href="http://nodejs.cn/">          Node.js 
中文网         </A>         
<DIV><INPUT id="search_input" placeholder="API 快速搜索" value="">         
</DIV></DIV>
<UL>
  <LI><A class="nav-documentation" href="http://nodejs.cn/api/documentation.html">关于本文档</A></LI>
  <LI><A class="nav-synopsis" 
  href="http://nodejs.cn/api/synopsis.html">用法与例子</A></LI></UL>
<DIV class="line"></DIV>
<UL>
  <LI><A class="nav-assert" href="http://nodejs.cn/api/assert.html">Assert 
  (断言)</A></LI>
  <LI><A class="nav-buffer" 
  href="http://nodejs.cn/api/buffer.html">Buffer</A></LI>
  <LI><A class="nav-addons" href="http://nodejs.cn/api/addons.html">C/C++ 
  插件</A></LI>
  <LI><A class="nav-child_process" href="http://nodejs.cn/api/child_process.html">Child 
  Processes (子进程)</A></LI>
  <LI><A class="nav-cluster" href="http://nodejs.cn/api/cluster.html">Cluster 
  (集群)</A></LI>
  <LI><A class="nav-cli" href="http://nodejs.cn/api/cli.html">CLI 
  (命令行选项)</A></LI>
  <LI><A class="nav-console" href="http://nodejs.cn/api/console.html">Console 
  (控制台)</A></LI>
  <LI><A class="nav-crypto" href="http://nodejs.cn/api/crypto.html">Crypto 
  (加密)</A></LI>
  <LI><A class="nav-debugger" href="http://nodejs.cn/api/debugger.html">Debugger 
  (调试器)</A></LI>
  <LI><A class="nav-dns" href="http://nodejs.cn/api/dns.html">DNS 
  (域名服务器)</A></LI>
  <LI><A class="nav-domain" href="http://nodejs.cn/api/domain.html">Domain 
  (域)</A></LI>
  <LI><A class="nav-errors" href="http://nodejs.cn/api/errors.html">Error 
  (错误)</A></LI>
  <LI><A class="nav-events" href="http://nodejs.cn/api/events.html">Events 
  (事件)</A></LI>
  <LI><A class="nav-fs" href="http://nodejs.cn/api/fs.html">File System 
  (文件系统)</A></LI>
  <LI><A class="nav-globals" href="http://nodejs.cn/api/globals.html">Global 
  (全局变量)</A></LI>
  <LI><A class="nav-http" href="http://nodejs.cn/api/http.html">HTTP</A></LI>
  <LI><A class="nav-https" href="http://nodejs.cn/api/https.html">HTTPS</A></LI>
  <LI><A class="nav-modules" href="http://nodejs.cn/api/modules.html">Module 
  (模块)</A></LI>
  <LI><A class="nav-net" href="http://nodejs.cn/api/net.html">Net (网络)</A></LI>
  <LI><A class="nav-os active" href="http://nodejs.cn/api/os.html">OS 
  (操作系统)</A></LI>
  <LI><A class="nav-path" href="http://nodejs.cn/api/path.html">Path 
  (路径)</A></LI>
  <LI><A class="nav-process" href="http://nodejs.cn/api/process.html">Process 
  (进程)</A></LI>
  <LI><A class="nav-punycode" 
  href="http://nodejs.cn/api/punycode.html">Punycode</A></LI>
  <LI><A class="nav-querystring" 
  href="http://nodejs.cn/api/querystring.html">Query Strings (查询字符串)</A></LI>
  <LI><A class="nav-readline" href="http://nodejs.cn/api/readline.html">Readline 
  (逐行读取)</A></LI>
  <LI><A class="nav-repl" href="http://nodejs.cn/api/repl.html">REPL 
  (交互式解释器)</A></LI>
  <LI><A class="nav-stream" href="http://nodejs.cn/api/stream.html">Stream 
  (流)</A></LI>
  <LI><A class="nav-string_decoder" href="http://nodejs.cn/api/string_decoder.html">String 
  Decoder (字符串解码器)</A></LI>
  <LI><A class="nav-timers" href="http://nodejs.cn/api/timers.html">Timer 
  (定时器)</A></LI>
  <LI><A class="nav-tls" href="http://nodejs.cn/api/tls.html">TLS 
  (安全传输层)</A></LI>
  <LI><A class="nav-tty" href="http://nodejs.cn/api/tty.html">TTY (终端)</A></LI>
  <LI><A class="nav-dgram" href="http://nodejs.cn/api/dgram.html">UDP/Datagram 
  (数据报)</A></LI>
  <LI><A class="nav-url" href="http://nodejs.cn/api/url.html">URL</A></LI>
  <LI><A class="nav-util" href="http://nodejs.cn/api/util.html">Util 
  (实用工具)</A></LI>
  <LI><A class="nav-v8" href="http://nodejs.cn/api/v8.html">V8</A></LI>
  <LI><A class="nav-vm" href="http://nodejs.cn/api/vm.html">VM (虚拟机)</A></LI>
  <LI><A class="nav-zlib" href="http://nodejs.cn/api/zlib.html">ZLIB 
  (压缩)</A></LI></UL>
<DIV class="line"></DIV></DIV>
<DIV class="interior" id="column1" data-id="os"><HEADER>
<H1>Node.js v6.10.3 文档</H1>
<DIV id="gtoc">
<P><A name="toc" href="http://nodejs.cn/api/">返回文档首页</A>             <!--<a href="/api/all.html">单页面显示</a> |--> 
            <!--<a href="/api/os.json">JSON格式</a> |-->             <!--<a href="/api/en/os.html">查看英文版</a>--> 
          </P></DIV>
<HR>
</HEADER>
<DIV id="toc">
<H2>目录</H2>
<UL>
  <LI><SPAN class="stability_2"><A href="http://nodejs.cn/api/os.html#os_os">os 
  (操作系统)</A></SPAN>
  <UL> 
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_eol">os.EOL</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_arch">os.arch()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_constants">os.constants</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_cpus">os.cpus()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_endianness">os.endianness()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_freemem">os.freemem()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_homedir">os.homedir()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_hostname">os.hostname()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_loadavg">os.loadavg()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_networkinterfaces">os.networkInterfaces()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_platform">os.platform()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_release">os.release()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_tmpdir">os.tmpdir()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_totalmem">os.totalmem()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_type">os.type()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_uptime">os.uptime()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_userinfo_options">os.userInfo([options])</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_os_constants_1">OS 
    常量</A></SPAN>
    <UL> 
      <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_signal_constants">信号常量</A></SPAN></LI>
      <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_error_constants">错误常量</A></SPAN>
      <UL> 
        <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_posix_error_constants">POSIX 
        错误常量</A></SPAN></LI>
        <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_windows_specific_error_constants">Windows 
        系统特有的错误常量</A></SPAN></LI></UL></LI>
      <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/os.html#os_libuv_constants">libuv 
      常量</A></SPAN></LI></UL></LI></UL></LI></UL></DIV>
<DIV id="apicontent">
<H1>os (操作系统)<SPAN><A class="mark" id="os_os" href="http://nodejs.cn/api/os.html#os_os">#</A></SPAN></H1>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os.md" target="_blank" 
rel="nofollow">参与翻译</A></P>
<PRE class="api_stability api_stability_2"><A href="http://nodejs.cn/api/documentation.html#documentation_stability_index">稳定性: 2</A> - 稳定的</PRE>
<P><CODE>os</CODE> 模块提供了一些操作系统相关的实用方法。可以这么引用它:</P>
<PRE><CODE class="lang-js">const os = require('os');
</CODE></PRE>
<H2>os.EOL<SPAN><A class="mark" id="os_os_eol" href="http://nodejs.cn/api/os.html#os_os_eol">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_eol">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_eol.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.7.8</SPAN> </DIV>
<UL>
  <LI><A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A></LI></UL>
<P>一个字符串常量,定义操作系统相关的行末标志:</P>
<UL>
  <LI><CODE>\n</CODE> 在 POSIX 系统上</LI>
  <LI><CODE>\r\n</CODE> 在 Windows系统上</LI></UL>
<H2>os.arch()<SPAN><A class="mark" id="os_os_arch" href="http://nodejs.cn/api/os.html#os_os_arch">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_arch">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_arch.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.5.0</SPAN> </DIV>
<UL>
  <LI>返回: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A></LI></UL>
<P><CODE>os.arch()</CODE>方法返回一个字符串, 表明<EM>Node.js 二进制编译</EM> 所用的 操作系统CPU架构.</P>
<P>现在可能的值有: <CODE>'arm'</CODE>, <CODE>'arm64'</CODE>, <CODE>'ia32'</CODE>, 
<CODE>'mips'</CODE>, <CODE>'mipsel'</CODE>, <CODE>'ppc'</CODE>, 
<CODE>'ppc64'</CODE>, <CODE>'s390'</CODE>, <CODE>'s390x'</CODE>, 
<CODE>'x32'</CODE>, <CODE>'x64'</CODE>,  和 <CODE>'x86'</CODE>.</P>
<P>等价于 <A 
href="http://nodejs.cn/api/process.html#process_process_arch"><CODE>process.arch</CODE></A>.</P>
<H2>os.constants<SPAN><A class="mark" id="os_os_constants" href="http://nodejs.cn/api/os.html#os_os_constants">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_constants">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_constants.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v6.3.0</SPAN> </DIV>
<UL>
  <LI><A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">&lt;Object&gt;</A></LI></UL>
<P>返回一个对象包含普遍用于错误码,处理信号等的操作系统相关的特定常量. 现在, 这些特定的常量的定义被描述在<A href="http://nodejs.cn/api/os.html#os_os_constants">OS 
Constants</A>.</P>
<H2>os.cpus()<SPAN><A class="mark" id="os_os_cpus" href="http://nodejs.cn/api/os.html#os_os_cpus">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_cpus">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_cpus.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.3.3</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array">&lt;Array&gt;</A></LI></UL>
<P><CODE>os.cpus()</CODE> 方法返回一个对象数组, 包含安装的每个CPU/CPU核的信息. </P>
<P>下面的属性包含在每个对象中:</P>
<UL>
  <LI><CODE>model</CODE> <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A></LI>
  <LI><CODE>speed</CODE> <SPAN class="type">&lt;number&gt;</SPAN> (兆赫兹为单位)</LI>
  <LI><CODE>times</CODE> <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">&lt;Object&gt;</A>
  <UL> 
    <LI><CODE>user</CODE> <SPAN class="type">&lt;number&gt;</SPAN> 
    CPU花费在用户模式下的毫秒时间数.</LI>
    <LI><CODE>nice</CODE> <SPAN class="type">&lt;number&gt;</SPAN> 
    CPU花费在良好模式下的毫秒时间数.</LI>
    <LI><CODE>sys</CODE> <SPAN class="type">&lt;number&gt;</SPAN> 
    CPU花费在系统模式下的毫秒时间数.</LI>
    <LI><CODE>idle</CODE> <SPAN class="type">&lt;number&gt;</SPAN> 
    CPU花费在空闲模式下的毫秒时间数.</LI>
    <LI><CODE>irq</CODE> <SPAN class="type">&lt;number&gt;</SPAN> 
    CPU花费在中断请求模式下的毫秒时间数.</LI></UL></LI></UL>
<P>For example:</P>
<PRE><CODE class="lang-js">[
  {
    model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',
    speed: 2926,
    times: {
      user: 252020,
      nice: 0,
      sys: 30340,
      idle: 1070356870,
      irq: 0
    }
  },
  {
    model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',
    speed: 2926,
    times: {
      user: 306960,
      nice: 0,
      sys: 26980,
      idle: 1071569080,
      irq: 0
    }
  },
  {
    model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',
    speed: 2926,
    times: {
      user: 248450,
      nice: 0,
      sys: 21750,
      idle: 1070919370,
      irq: 0
    }
  },
  {
    model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',
    speed: 2926,
    times: {
      user: 256880,
      nice: 0,
      sys: 19430,
      idle: 1070905480,
      irq: 20
    }
  },
  {
    model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',
    speed: 2926,
    times: {
      user: 511580,
      nice: 20,
      sys: 40900,
      idle: 1070842510,
      irq: 0
    }
  },
  {
    model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',
    speed: 2926,
    times: {
      user: 291660,
      nice: 0,
      sys: 34360,
      idle: 1070888000,
      irq: 10
    }
  },
  {
    model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',
    speed: 2926,
    times: {
      user: 308260,
      nice: 0,
      sys: 55410,
      idle: 1071129970,
      irq: 880
    }
  },
  {
    model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',
    speed: 2926,
    times: {
      user: 266450,
      nice: 1480,
      sys: 34920,
      idle: 1072572010,
      irq: 30
    }
  }
]
</CODE></PRE>
<P><EM>注意</EM>: 因为<CODE>nice</CODE>的值是UNIX相关的, 在Windows系统上, 所有处理器的 
<CODE>nice</CODE> 值总是0.</P>
<H2>os.endianness()<SPAN><A class="mark" id="os_os_endianness" href="http://nodejs.cn/api/os.html#os_os_endianness">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_endianness">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_endianness.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.9.4</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A></LI></UL>
<P><CODE>os.endianness()</CODE>方法返回一个字符串,表明<EM>Node.js二进制编译环境的</EM>字节顺序.</P>
<P>可能的值:</P>
<UL>
  <LI><CODE>'BE'</CODE> 大端模式</LI>
  <LI><CODE>'LE'</CODE> 小端模式</LI></UL>
<H2>os.freemem()<SPAN><A class="mark" id="os_os_freemem" href="http://nodejs.cn/api/os.html#os_os_freemem">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_freemem">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_freemem.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.3.3</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type">&lt;Integer&gt;</A></LI></UL>
<P><CODE>os.freemem()</CODE> 方法以整数的形式回空闲系统内存 的字节数.</P>
<H2>os.homedir()<SPAN><A class="mark" id="os_os_homedir" href="http://nodejs.cn/api/os.html#os_os_homedir">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_homedir">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_homedir.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v2.3.0</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A></LI></UL>
<P><CODE>os.homedir()</CODE> 方法以字符串的形式返回当前用户的home目录.</P>
<H2>os.hostname()<SPAN><A class="mark" id="os_os_hostname" href="http://nodejs.cn/api/os.html#os_os_hostname">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_hostname">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_hostname.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.3.3</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A></LI></UL>
<P><CODE>os.hostname()</CODE>方法以字符串的形式返回操作系统的主机名.</P>
<H2>os.loadavg()<SPAN><A class="mark" id="os_os_loadavg" href="http://nodejs.cn/api/os.html#os_os_loadavg">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_loadavg">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_loadavg.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.3.3</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array">&lt;Array&gt;</A></LI></UL>
<P><CODE>os.loadavg()</CODE>方法返回一个数组,包含1, 5, 15分钟平均负载.</P>
<P>平均负载是系统活动的测量,由操作系统计算得出,表达为一个分数. 一般来说,平均负载应该理想地比系统的逻辑CPU的数目要少. 
平均负载是UNIX相关的概念,在Windows平台上没有对应的概念. 在Windows上,其返回值总是<CODE>[0, 0, 0]</CODE>.</P>
<H2>os.networkInterfaces()<SPAN><A class="mark" id="os_os_networkinterfaces" 
href="http://nodejs.cn/api/os.html#os_os_networkinterfaces">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_networkinterfaces">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_networkinterfaces.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.6.0</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">&lt;Object&gt;</A></LI></UL>
<P><CODE>os.networkInterfaces()</CODE>方法返回一个对象,包含只有被赋予网络地址的网络接口. </P>
<P>在返回对象的每个关键词都指明了一个网络接口.</P>
<P>返回的值是一个对象数组, 每个都描述了赋予的网络地址.</P>
<P>被赋予网络地址的对象包含的属性:</P>
<UL>
  <LI><CODE>address</CODE> <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A> 
  被赋予的 IPv4 或 IPv6 地址</LI>
  <LI><CODE>netmask</CODE> <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A> 
   IPv4 或 IPv6 子网掩码</LI>
  <LI><CODE>family</CODE> <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A> 
   <CODE>IPv4</CODE> 或 <CODE>IPv6</CODE></LI>
  <LI><CODE>mac</CODE> <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A> 
  网络接口的MAC地址</LI>
  <LI><CODE>internal</CODE> <SPAN class="type">&lt;boolean&gt;</SPAN> 如果 
  网络接口是loopback或相似的远程不能用的接口时, 值为<CODE>true</CODE>,否则为<CODE>false</CODE></LI>
  <LI><CODE>scopeid</CODE> <SPAN class="type">&lt;number&gt;</SPAN> IPv6 数字领域识别码 
  (只有当 <CODE>family</CODE> 是<CODE>IPv6</CODE>时可用)</LI></UL>
<PRE><CODE class="lang-js">{
  lo: [
    {
      address: '127.0.0.1',
      netmask: '255.0.0.0',
      family: 'IPv4',
      mac: '00:00:00:00:00:00',
      internal: true
    },
    {
      address: '::1',
      netmask: 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',
      family: 'IPv6',
      mac: '00:00:00:00:00:00',
      internal: true
    }
  ],
  eth0: [
    {
      address: '192.168.1.108',
      netmask: '255.255.255.0',
      family: 'IPv4',
      mac: '01:02:03:0a:0b:0c',
      internal: false
    },
    {
      address: 'fe80::a00:27ff:fe4e:66a1',
      netmask: 'ffff:ffff:ffff:ffff::',
      family: 'IPv6',
      mac: '01:02:03:0a:0b:0c',
      internal: false
    }
  ]
}
</CODE></PRE>
<H2>os.platform()<SPAN><A class="mark" id="os_os_platform" href="http://nodejs.cn/api/os.html#os_os_platform">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_platform">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_platform.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.5.0</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A></LI></UL>
<P><CODE>os.platform()</CODE> 方法返回一个字符串, 指定Node.js编译时的操作系统平台</P>
<P>当前可能的值有:</P>
<UL>
  <LI><CODE>'aix'</CODE></LI>
  <LI><CODE>'darwin'</CODE></LI>
  <LI><CODE>'freebsd'</CODE></LI>
  <LI><CODE>'linux'</CODE></LI>
  <LI><CODE>'openbsd'</CODE></LI>
  <LI><CODE>'sunos'</CODE></LI>
  <LI><CODE>'win32'</CODE></LI></UL>
<P>等价于 <A 
href="http://nodejs.cn/api/process.html#process_process_platform"><CODE>process.platform</CODE></A>.</P>
<P><EM>注意</EM>: 如果Node.js 在Android操作系统上构建, <CODE>'android'</CODE>值 可能被返回. 然而, 
Android支持Node.js在当前被认为是实验期.</P>
<H2>os.release()<SPAN><A class="mark" id="os_os_release" href="http://nodejs.cn/api/os.html#os_os_release">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_release">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_release.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.3.3</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A></LI></UL>
<P><CODE>os.release()</CODE>方法返回一个字符串, 指定操作系统的发行版.</P>
<P><EM>注意</EM>: 在POSIX系统上, 操作系统发行版是通过 调用uname(3)得到的. 在 Windows系统上, 
用<CODE>GetVersionExW()</CODE> . 请查看 <A href="https://en.wikipedia.org/wiki/Uname#Examples">https://en.wikipedia.org/wiki/Uname#Examples</A> 
获取更多信息.</P>
<H2>os.tmpdir()<SPAN><A class="mark" id="os_os_tmpdir" href="http://nodejs.cn/api/os.html#os_os_tmpdir">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_tmpdir">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_tmpdir.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.9.9</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A></LI></UL>
<P><CODE>os.tmpdir()</CODE>方法返回一个字符串, 表明操作系统的 默认临时文件目录.</P>
<H2>os.totalmem()<SPAN><A class="mark" id="os_os_totalmem" href="http://nodejs.cn/api/os.html#os_os_totalmem">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_totalmem">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_totalmem.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.3.3</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type">&lt;Integer&gt;</A></LI></UL>
<P><CODE>os.totalmem()</CODE>方法以整数的形式返回所有系统内存的字节数.</P>
<H2>os.type()<SPAN><A class="mark" id="os_os_type" href="http://nodejs.cn/api/os.html#os_os_type">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_type">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_type.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.3.3</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A></LI></UL>
<P><CODE>os.type()</CODE>方法返回一个字符串,表明操作系统的名字, 由uname(3)返回.举个例子, 
<CODE>'Linux'</CODE> 在 Linux系统上, <CODE>'Darwin'</CODE> 在 OS X 
系统上,<CODE>'Windows_NT'</CODE> 在 Windows系统上.</P>
<P>请查看<A 
href="https://en.wikipedia.org/wiki/Uname#Examples">https://en.wikipedia.org/wiki/Uname#Examples</A> 
获取其他关于在不同 操作系统上执行uname(3),得到输出的信息.</P>
<H2>os.uptime()<SPAN><A class="mark" id="os_os_uptime" href="http://nodejs.cn/api/os.html#os_os_uptime">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_uptime">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_uptime.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.3.3</SPAN> </DIV>
<UL>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type">&lt;Integer&gt;</A></LI></UL>
<P><CODE>os.uptime()</CODE> 方法在几秒内返回操作系统的上线时间.</P>
<P><EM>注意</EM>: 在 Node.js' 内部, 这个数值是用 <CODE>double</CODE> 来表示的. 然而, 小数秒数不会被返回, 
因此其值通常被认为是整数.</P>
<H2>os.userInfo([options])<SPAN><A class="mark" id="os_os_userinfo_options" 
href="http://nodejs.cn/api/os.html#os_os_userinfo_options">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_userinfo_options">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_userinfo_options.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v6.0.0</SPAN> </DIV>
<UL>
  <LI><CODE>options</CODE> <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">&lt;Object&gt;</A>
  <UL> 
    <LI><CODE>encoding</CODE> <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;String&gt;</A> 
    用于解释结果字符串的字符编码. 如果<CODE>encoding</CODE> 被设置为<CODE>'buffer'</CODE>, 
    <CODE>username</CODE>, <CODE>shell</CODE>, 和 <CODE>homedir</CODE> 的值将成为 
    <CODE>Buffer</CODE>的实例. (默认是: 'utf8')</LI></UL></LI>
  <LI>Returns: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">&lt;Object&gt;</A></LI></UL>
<P><CODE>os.userInfo()</CODE>方法当前有效用户的信息 -- 在 POSIX平台上, 这通常是password 文件的子集. 
返回的对象包括 <CODE>username</CODE>, <CODE>uid</CODE>, <CODE>gid</CODE>, 
<CODE>shell</CODE>, 和 <CODE>homedir</CODE>. 在Windows系统上, <CODE>uid</CODE> 和 
<CODE>gid</CODE> 域是 <CODE>-1</CODE>, and <CODE>shell</CODE>是 
<CODE>null</CODE>.</P>
<P><CODE>homedir</CODE>的值由<CODE>os.userInfo()</CODE>返回, 由操作系统提供. 
这区别了<CODE>os.homedir()</CODE>的结果, 它在求助操作系统响应之前, 为home目录请求几个环境变量.</P>
<H2>OS 常量<SPAN><A class="mark" id="os_os_constants_1" href="http://nodejs.cn/api/os.html#os_os_constants_1">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_os_constants_1">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/os_constants_1.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<P>下面的常量被<CODE>os.constants</CODE> 所输出. <STRONG>注意:</STRONG> 
并不是所有的常量在每一个操作系统上都是可用的.</P>
<H3>信号常量<SPAN><A class="mark" id="os_signal_constants" href="http://nodejs.cn/api/os.html#os_signal_constants">#</A></SPAN></H3>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_signal_constants">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/signal_constants.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<P>下面的信号常量由 <CODE>os.constants.signals</CODE> 给出:</P>
<TABLE>
  <TBODY>
  <TR>
    <TH>常量</TH>
    <TH>描述</TH></TR>
  <TR>
    <TD><CODE>SIGHUP</CODE></TD>
    <TD>发送来表明当一个控制终端关闭或者是父进程退出.</TD></TR>
  <TR>
    <TD><CODE>SIGINT</CODE></TD>
    <TD>发送来表明当一个用户瓷王中断一个进程时.    (<CODE>(Ctrl+C)</CODE>).</TD></TR>
  <TR>
    <TD><CODE>SIGQUIT</CODE></TD>
    <TD>发送来表明当一个用户希望终止一个进程并且执行核心转储.</TD></TR>
  <TR>
    <TD><CODE>SIGILL</CODE></TD>
    <TD>发送给一个进程来通知它已经试图执行一个非法的,畸形的,未知的或特权的指令.</TD></TR>
  <TR>
    <TD><CODE>SIGTRAP</CODE></TD>
    <TD>发送给一个进程当异常已经发生了.</TD></TR>
  <TR>
    <TD><CODE>SIGABRT</CODE></TD>
    <TD>发送给一个进程来请求终止</TD></TR>
  <TR>
    <TD><CODE>SIGIOT</CODE></TD>
    <TD><CODE>SIGABRT</CODE>的同义词</TD></TR>
  <TR>
    <TD><CODE>SIGBUS</CODE></TD>
    <TD>发送给一个进程来通知它已经造成了总线错误.</TD></TR>
  <TR>
    <TD><CODE>SIGFPE</CODE></TD>
    <TD>发送给一个进程来通知它已经执行了一个非法的算术操作.</TD></TR>
  <TR>
    <TD><CODE>SIGKILL</CODE></TD>
    <TD>发送给一个进程来立即终止它.</TD></TR>
  <TR>
    <TD><CODE>SIGUSR1</CODE> <CODE>SIGUSR2</CODE></TD>
    <TD>发送给一个进程来确定它的用户定义情况.</TD></TR>
  <TR>
    <TD><CODE>SIGSEGV</CODE></TD>
    <TD>发送给一个进程来通知段错误.</TD></TR>
  <TR>
    <TD><CODE>SIGPIPE</CODE></TD>
    <TD>发送给一个进程当它试图写入一个非连接的管道时.</TD></TR>
  <TR>
    <TD><CODE>SIGALRM</CODE></TD>
    <TD>发送给一个进程当系统时钟消逝时.</TD></TR>
  <TR>
    <TD><CODE>SIGTERM</CODE></TD>
    <TD>发送给一个进程来请求终止.</TD></TR>
  <TR>
    <TD><CODE>SIGCHLD</CODE></TD>
    <TD>发送给一个进程当一个子进程终止时.</TD></TR>
  <TR>
    <TD><CODE>SIGSTKFLT</CODE></TD>
    <TD>发送给一个进程来表明一个协处理器的栈错误.</TD></TR>
  <TR>
    <TD><CODE>SIGCONT</CODE></TD>
    <TD>发送来通知操作系统继续一个暂停的进程.</TD></TR>
  <TR>
    <TD><CODE>SIGSTOP</CODE></TD>
    <TD>发送来通知操作系统暂停一个进程.</TD></TR>
  <TR>
    <TD><CODE>SIGTSTP</CODE></TD>
    <TD>发送给一个进程来请求它停止.</TD></TR>
  <TR>
    <TD><CODE>SIGBREAK</CODE></TD>
    <TD>发送来表明当一个用户希望终止一个进程.</TD></TR>
  <TR>
    <TD><CODE>SIGTTIN</CODE></TD>
    <TD>发送给一个进程当它在后台读取TTY时.</TD></TR>
  <TR>
    <TD><CODE>SIGTTOU</CODE></TD>
    <TD>发送给一个进程当它在后台写入TTY时.</TD></TR>
  <TR>
    <TD><CODE>SIGURG</CODE></TD>
    <TD>发送给一个进程当socket由紧急的数据需要读取时.</TD></TR>
  <TR>
    <TD><CODE>SIGXCPU</CODE></TD>
    <TD>发送给一个进程当它超过他在CPU使用上的限制时.</TD></TR>
  <TR>
    <TD><CODE>SIGXFSZ</CODE></TD>
    <TD>发送给一个进程当它文件成长的比最大允许的值还大时.</TD></TR>
  <TR>
    <TD><CODE>SIGVTALRM</CODE></TD>
    <TD>发送给一个进程当一个虚拟时钟消逝时.</TD></TR>
  <TR>
    <TD><CODE>SIGPROF</CODE></TD>
    <TD>发送给一个进程当一个系统时钟消逝时.</TD></TR>
  <TR>
    <TD><CODE>SIGWINCH</CODE></TD>
    <TD>发送给一个进程当控制终端改变它的大小.</TD></TR>
  <TR>
    <TD><CODE>SIGIO</CODE></TD>
    <TD>发送给一个进程当I/O可用时.</TD></TR>
  <TR>
    <TD><CODE>SIGPOLL</CODE></TD>
    <TD><CODE>SIGIO</CODE>同义词</TD></TR>
  <TR>
    <TD><CODE>SIGLOST</CODE></TD>
    <TD>发送给一个进程当文件锁丢失时.</TD></TR>
  <TR>
    <TD><CODE>SIGPWR</CODE></TD>
    <TD>发送给一个进程来通知功率错误.</TD></TR>
  <TR>
    <TD><CODE>SIGINFO</CODE></TD>
    <TD><CODE>SIGPWR</CODE>同义词</TD></TR>
  <TR>
    <TD><CODE>SIGSYS</CODE></TD>
    <TD>发送给一个进程来通知有错误的参数.</TD></TR>
  <TR>
    <TD><CODE>SIGUNUSED</CODE></TD>
    <TD><CODE>SIGSYS</CODE>的同义词</TD></TR></TBODY></TABLE>
<H3>错误常量<SPAN><A class="mark" id="os_error_constants" href="http://nodejs.cn/api/os.html#os_error_constants">#</A></SPAN></H3>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_error_constants">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/error_constants.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<P>下面的错误常量由 <CODE>os.constants.errno</CODE> 给出:</P>
<H4>POSIX 错误常量<SPAN><A class="mark" id="os_posix_error_constants" href="http://nodejs.cn/api/os.html#os_posix_error_constants">#</A></SPAN></H4>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_posix_error_constants">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/posix_error_constants.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<TABLE>
  <TBODY>
  <TR>
    <TH>常量</TH>
    <TH>描述</TH></TR>
  <TR>
    <TD><CODE>E2BIG</CODE></TD>
    <TD>表明参数列表比期望的要长.</TD></TR>
  <TR>
    <TD><CODE>EACCES</CODE></TD>
    <TD>表明操作没有足够的权限.</TD></TR>
  <TR>
    <TD><CODE>EADDRINUSE</CODE></TD>
    <TD>表明该网络地址已经在使用.</TD></TR>
  <TR>
    <TD><CODE>EADDRNOTAVAIL</CODE></TD>
    <TD>表明该网络地址当前不能使用.</TD></TR>
  <TR>
    <TD><CODE>EAFNOSUPPORT</CODE></TD>
    <TD>表明该网络地址簇不被支持.</TD></TR>
  <TR>
    <TD><CODE>EAGAIN</CODE></TD>
    <TD>表明当前没有可用数据,稍后再次尝试操作.</TD></TR>
  <TR>
    <TD><CODE>EALREADY</CODE></TD>
    <TD>表明socket有一个即将发生的连接在进行中.</TD></TR>
  <TR>
    <TD><CODE>EBADF</CODE></TD>
    <TD>表明一个文件描述符不可用.</TD></TR>
  <TR>
    <TD><CODE>EBADMSG</CODE></TD>
    <TD>表明一个无效的数据信息.</TD></TR>
  <TR>
    <TD><CODE>EBUSY</CODE></TD>
    <TD>表明一个设备或资源处于忙碌中.</TD></TR>
  <TR>
    <TD><CODE>ECANCELED</CODE></TD>
    <TD>表明一个操作被取消.</TD></TR>
  <TR>
    <TD><CODE>ECHILD</CODE></TD>
    <TD>表明没有子进程.</TD></TR>
  <TR>
    <TD><CODE>ECONNABORTED</CODE></TD>
    <TD>表明网络连接已经被终止.</TD></TR>
  <TR>
    <TD><CODE>ECONNREFUSED</CODE></TD>
    <TD>表明网络连接被拒绝.</TD></TR>
  <TR>
    <TD><CODE>ECONNRESET</CODE></TD>
    <TD>表明网络连接被重置 .</TD></TR>
  <TR>
    <TD><CODE>EDEADLK</CODE></TD>
    <TD>表明一个资源死锁已经被避免 .</TD></TR>
  <TR>
    <TD><CODE>EDESTADDRREQ</CODE></TD>
    <TD>表明需要目的地址 .</TD></TR>
  <TR>
    <TD><CODE>EDOM</CODE></TD>
    <TD>表明参数超过了函数的作用域 .</TD></TR>
  <TR>
    <TD><CODE>EDQUOT</CODE></TD>
    <TD>表明已经超过磁盘指标 .</TD></TR>
  <TR>
    <TD><CODE>EEXIST</CODE></TD>
    <TD>表明文件已经存在 .</TD></TR>
  <TR>
    <TD><CODE>EFAULT</CODE></TD>
    <TD>表明一个无效的指针地址 .</TD></TR>
  <TR>
    <TD><CODE>EFBIG</CODE></TD>
    <TD>表明文件太大 .</TD></TR>
  <TR>
    <TD><CODE>EHOSTUNREACH</CODE></TD>
    <TD>表明主机不可达 .</TD></TR>
  <TR>
    <TD><CODE>EIDRM</CODE></TD>
    <TD>表明识别码已经被移除 .</TD></TR>
  <TR>
    <TD><CODE>EILSEQ</CODE></TD>
    <TD>表明一个非法的字节序 .</TD></TR>
  <TR>
    <TD><CODE>EINPROGRESS</CODE></TD>
    <TD>表明一个操作已经在进行中 .</TD></TR>
  <TR>
    <TD><CODE>EINTR</CODE></TD>
    <TD>表明一个函数调用被中断 .</TD></TR>
  <TR>
    <TD><CODE>EINVAL</CODE></TD>
    <TD>表明提供了一个无效的参数 .</TD></TR>
  <TR>
    <TD><CODE>EIO</CODE></TD>
    <TD>表明一个其他的不确定的 I/O 错误.</TD></TR>
  <TR>
    <TD><CODE>EISCONN</CODE></TD>
    <TD>表明socket已经连接 .</TD></TR>
  <TR>
    <TD><CODE>EISDIR</CODE></TD>
    <TD>表明路径是目录 .</TD></TR>
  <TR>
    <TD><CODE>ELOOP</CODE></TD>
    <TD>表明路径上有太多层次的符号连接 .</TD></TR>
  <TR>
    <TD><CODE>EMFILE</CODE></TD>
    <TD>表明有太多打开的文件 .</TD></TR>
  <TR>
    <TD><CODE>EMLINK</CODE></TD>
    <TD>表明文件上有太多的硬连接 .</TD></TR>
  <TR>
    <TD><CODE>EMSGSIZE</CODE></TD>
    <TD>表明提供的信息太长 .</TD></TR>
  <TR>
    <TD><CODE>EMULTIHOP</CODE></TD>
    <TD>表明多跳被尝试 .</TD></TR>
  <TR>
    <TD><CODE>ENAMETOOLONG</CODE></TD>
    <TD>表明文件名太长 .</TD></TR>
  <TR>
    <TD><CODE>ENETDOWN</CODE></TD>
    <TD>表明网络关闭 .</TD></TR>
  <TR>
    <TD><CODE>ENETRESET</CODE></TD>
    <TD>表明连接被网络终止 .</TD></TR>
  <TR>
    <TD><CODE>ENETUNREACH</CODE></TD>
    <TD>表明网络不可达 .</TD></TR>
  <TR>
    <TD><CODE>ENFILE</CODE></TD>
    <TD>表明系统中打开了太多的文件 .</TD></TR>
  <TR>
    <TD><CODE>ENOBUFS</CODE></TD>
    <TD>表明没有有效的缓存空间 .</TD></TR>
  <TR>
    <TD><CODE>ENODATA</CODE></TD>
    <TD>表明在流头读取队列上没有可用的信息 .</TD></TR>
  <TR>
    <TD><CODE>ENODEV</CODE></TD>
    <TD>表明没有这样的设备 .</TD></TR>
  <TR>
    <TD><CODE>ENOENT</CODE></TD>
    <TD>表明没有这样的文件或目录 .</TD></TR>
  <TR>
    <TD><CODE>ENOEXEC</CODE></TD>
    <TD>表明一个执行格式错误 .</TD></TR>
  <TR>
    <TD><CODE>ENOLCK</CODE></TD>
    <TD>表明没有可用的锁 .</TD></TR>
  <TR>
    <TD><CODE>ENOLINK</CODE></TD>
    <TD>表明链接在服务 .</TD></TR>
  <TR>
    <TD><CODE>ENOMEM</CODE></TD>
    <TD>表明没有足够的空间 .</TD></TR>
  <TR>
    <TD><CODE>ENOMSG</CODE></TD>
    <TD>表明想要的数据类型没有信息 .</TD></TR>
  <TR>
    <TD><CODE>ENOPROTOOPT</CODE></TD>
    <TD>表明给定的协议不可用 .</TD></TR>
  <TR>
    <TD><CODE>ENOSPC</CODE></TD>
    <TD>表明该设备上没有可用的空间 .</TD></TR>
  <TR>
    <TD><CODE>ENOSR</CODE></TD>
    <TD>表明没有可用的流资源 .</TD></TR>
  <TR>
    <TD><CODE>ENOSTR</CODE></TD>
    <TD>表明给定的资源不是流 .</TD></TR>
  <TR>
    <TD><CODE>ENOSYS</CODE></TD>
    <TD>表明功能没有被实现 .</TD></TR>
  <TR>
    <TD><CODE>ENOTCONN</CODE></TD>
    <TD>表明socket没有连接 .</TD></TR>
  <TR>
    <TD><CODE>ENOTDIR</CODE></TD>
    <TD>表明路径不是目录 .</TD></TR>
  <TR>
    <TD><CODE>ENOTEMPTY</CODE></TD>
    <TD>表明目录是非空的 .</TD></TR>
  <TR>
    <TD><CODE>ENOTSOCK</CODE></TD>
    <TD>表明给定的项目不是socket .</TD></TR>
  <TR>
    <TD><CODE>ENOTSUP</CODE></TD>
    <TD>表明给定的操作不受支持 .</TD></TR>
  <TR>
    <TD><CODE>ENOTTY</CODE></TD>
    <TD>表明一个不适当的 I/O 控制操作.</TD></TR>
  <TR>
    <TD><CODE>ENXIO</CODE></TD>
    <TD>表明没有该设备或地址 .</TD></TR>
  <TR>
    <TD><CODE>EOPNOTSUPP</CODE></TD>
    <TD>表明一个操作不被socket所支持.     注意尽管<CODE>ENOTSUP</CODE> 和 
      <CODE>EOPNOTSUPP</CODE> 在Linux上有相同的值时,     根据 POSIX.1 规范,这些错误值应该不同.)</TD></TR>
  <TR>
    <TD><CODE>EOVERFLOW</CODE></TD>
    <TD>表明一个值太大以至于难以用给定的数据类型存储.</TD></TR>
  <TR>
    <TD><CODE>EPERM</CODE></TD>
    <TD>表明操作没有被许可.</TD></TR>
  <TR>
    <TD><CODE>EPIPE</CODE></TD>
    <TD>表明破裂的管道 .</TD></TR>
  <TR>
    <TD><CODE>EPROTO</CODE></TD>
    <TD>表明协议错误 .</TD></TR>
  <TR>
    <TD><CODE>EPROTONOSUPPORT</CODE></TD>
    <TD>表明一个协议不被支持 .</TD></TR>
  <TR>
    <TD><CODE>EPROTOTYPE</CODE></TD>
    <TD>表明socket错误的协议类型 .</TD></TR>
  <TR>
    <TD><CODE>ERANGE</CODE></TD>
    <TD>表明结果太大了 .</TD></TR>
  <TR>
    <TD><CODE>EROFS</CODE></TD>
    <TD>表明该文件系统是只读的 .</TD></TR>
  <TR>
    <TD><CODE>ESPIPE</CODE></TD>
    <TD>表明无效的查询操作 .</TD></TR>
  <TR>
    <TD><CODE>ESRCH</CODE></TD>
    <TD>表明没有这样的进程.</TD></TR>
  <TR>
    <TD><CODE>ESTALE</CODE></TD>
    <TD>表明该文件处理是稳定的 .</TD></TR>
  <TR>
    <TD><CODE>ETIME</CODE></TD>
    <TD>表明一个过期的时钟 .</TD></TR>
  <TR>
    <TD><CODE>ETIMEDOUT</CODE></TD>
    <TD>表明该连接超时 .</TD></TR>
  <TR>
    <TD><CODE>ETXTBSY</CODE></TD>
    <TD>表明一个文本文件处于忙碌 .</TD></TR>
  <TR>
    <TD><CODE>EWOULDBLOCK</CODE></TD>
    <TD>表明该操作被屏蔽 .</TD></TR>
  <TR>
    <TD><CODE>EXDEV</CODE></TD>
    <TD>表明一个不合适的连接 .   </TD></TR></TBODY></TABLE>
<H4>Windows 系统特有的错误常量<SPAN><A class="mark" id="os_windows_specific_error_constants" 
href="http://nodejs.cn/api/os.html#os_windows_specific_error_constants">#</A></SPAN></H4>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_windows_specific_error_constants">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/windows_specific_error_constants.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<P>下面的错误码与Windows系统相关:</P>
<TABLE>
  <TBODY>
  <TR>
    <TH>常量</TH>
    <TH>描述</TH></TR>
  <TR>
    <TD><CODE>WSAEINTR</CODE></TD>
    <TD>表明中断的函数调用 .</TD></TR>
  <TR>
    <TD><CODE>WSAEBADF</CODE></TD>
    <TD>表明一个无效的文件句柄 .</TD></TR>
  <TR>
    <TD><CODE>WSAEACCES</CODE></TD>
    <TD>表明权限不够完成操作 .</TD></TR>
  <TR>
    <TD><CODE>WSAEFAULT</CODE></TD>
    <TD>表明无效的指针地址 .</TD></TR>
  <TR>
    <TD><CODE>WSAEINVAL</CODE></TD>
    <TD>表明无效的参数被传递 .</TD></TR>
  <TR>
    <TD><CODE>WSAEMFILE</CODE></TD>
    <TD>表明有太多打开的文件 .</TD></TR>
  <TR>
    <TD><CODE>WSAEWOULDBLOCK</CODE></TD>
    <TD>表明资源暂时不可用 .</TD></TR>
  <TR>
    <TD><CODE>WSAEINPROGRESS</CODE></TD>
    <TD>表明操作当前正在进行中 .</TD></TR>
  <TR>
    <TD><CODE>WSAEALREADY</CODE></TD>
    <TD>表明操作已经在进行中 .</TD></TR>
  <TR>
    <TD><CODE>WSAENOTSOCK</CODE></TD>
    <TD>表明资源不是 socket.</TD></TR>
  <TR>
    <TD><CODE>WSAEDESTADDRREQ</CODE></TD>
    <TD>表明需要目的地址 .</TD></TR>
  <TR>
    <TD><CODE>WSAEMSGSIZE</CODE></TD>
    <TD>表明消息太长 .</TD></TR>
  <TR>
    <TD><CODE>WSAEPROTOTYPE</CODE></TD>
    <TD>表明socket协议类型错误 .</TD></TR>
  <TR>
    <TD><CODE>WSAENOPROTOOPT</CODE></TD>
    <TD>表明错误的协议选项 .</TD></TR>
  <TR>
    <TD><CODE>WSAEPROTONOSUPPORT</CODE></TD>
    <TD>表明协议不被支持 .</TD></TR>
  <TR>
    <TD><CODE>WSAESOCKTNOSUPPORT</CODE></TD>
    <TD>表明socket类型不被支持 .</TD></TR>
  <TR>
    <TD><CODE>WSAEOPNOTSUPP</CODE></TD>
    <TD>表明操作不被支持 .</TD></TR>
  <TR>
    <TD><CODE>WSAEPFNOSUPPORT</CODE></TD>
    <TD>表明协议簇不被支持 .</TD></TR>
  <TR>
    <TD><CODE>WSAEAFNOSUPPORT</CODE></TD>
    <TD>表明地址簇不被支持 .</TD></TR>
  <TR>
    <TD><CODE>WSAEADDRINUSE</CODE></TD>
    <TD>表明网络地址已经在使用 .</TD></TR>
  <TR>
    <TD><CODE>WSAEADDRNOTAVAIL</CODE></TD>
    <TD>表明网络地址不可用.</TD></TR>
  <TR>
    <TD><CODE>WSAENETDOWN</CODE></TD>
    <TD>表明网络关闭 .</TD></TR>
  <TR>
    <TD><CODE>WSAENETUNREACH</CODE></TD>
    <TD>表明网络不可达 .</TD></TR>
  <TR>
    <TD><CODE>WSAENETRESET</CODE></TD>
    <TD>表明网络连接被重置 .</TD></TR>
  <TR>
    <TD><CODE>WSAECONNABORTED</CODE></TD>
    <TD>表明连接被终止 .</TD></TR>
  <TR>
    <TD><CODE>WSAECONNRESET</CODE></TD>
    <TD>表明连接被同伴重置 .</TD></TR>
  <TR>
    <TD><CODE>WSAENOBUFS</CODE></TD>
    <TD>表明没有可用的缓存空间 .</TD></TR>
  <TR>
    <TD><CODE>WSAEISCONN</CODE></TD>
    <TD>表明socket已经连接 .</TD></TR>
  <TR>
    <TD><CODE>WSAENOTCONN</CODE></TD>
    <TD>表明socket没有连接 .</TD></TR>
  <TR>
    <TD><CODE>WSAESHUTDOWN</CODE></TD>
    <TD>表明数据在socket关闭之后,不能被发送 .</TD></TR>
  <TR>
    <TD><CODE>WSAETOOMANYREFS</CODE></TD>
    <TD>表明有太多的引用 .</TD></TR>
  <TR>
    <TD><CODE>WSAETIMEDOUT</CODE></TD>
    <TD>表明连接超时 .</TD></TR>
  <TR>
    <TD><CODE>WSAECONNREFUSED</CODE></TD>
    <TD>表明连接被拒绝 .</TD></TR>
  <TR>
    <TD><CODE>WSAELOOP</CODE></TD>
    <TD>表明名字不能被翻译 .</TD></TR>
  <TR>
    <TD><CODE>WSAENAMETOOLONG</CODE></TD>
    <TD>表明名字太长 .</TD></TR>
  <TR>
    <TD><CODE>WSAEHOSTDOWN</CODE></TD>
    <TD>表明网络主机关闭 .</TD></TR>
  <TR>
    <TD><CODE>WSAEHOSTUNREACH</CODE></TD>
    <TD>表明没有到网络主机的路由 .</TD></TR>
  <TR>
    <TD><CODE>WSAENOTEMPTY</CODE></TD>
    <TD>表明目录非空 .</TD></TR>
  <TR>
    <TD><CODE>WSAEPROCLIM</CODE></TD>
    <TD>表明有太多的进程 .</TD></TR>
  <TR>
    <TD><CODE>WSAEUSERS</CODE></TD>
    <TD>表明已经超过用户指标 .</TD></TR>
  <TR>
    <TD><CODE>WSAEDQUOT</CODE></TD>
    <TD>表明已经超过磁盘指标 .</TD></TR>
  <TR>
    <TD><CODE>WSAESTALE</CODE></TD>
    <TD>表明一个稳定的文件句柄引用 .</TD></TR>
  <TR>
    <TD><CODE>WSAEREMOTE</CODE></TD>
    <TD>表明项目是远程的 .</TD></TR>
  <TR>
    <TD><CODE>WSASYSNOTREADY</CODE></TD>
    <TD>表明网络子系统尚未准备好 .</TD></TR>
  <TR>
    <TD><CODE>WSAVERNOTSUPPORTED</CODE></TD>
    <TD>表明 winsock.dll 版本在范围之外.</TD></TR>
  <TR>
    <TD><CODE>WSANOTINITIALISED</CODE></TD>
    <TD>表明成功的 WSAStartup(Windows异步socket)还没有被执行 .</TD></TR>
  <TR>
    <TD><CODE>WSAEDISCON</CODE></TD>
    <TD>表明一个优雅的关机正在进行 .</TD></TR>
  <TR>
    <TD><CODE>WSAENOMORE</CODE></TD>
    <TD>表明没有更多的结果 .</TD></TR>
  <TR>
    <TD><CODE>WSAECANCELLED</CODE></TD>
    <TD>表明一个操作已经被取消 .</TD></TR>
  <TR>
    <TD><CODE>WSAEINVALIDPROCTABLE</CODE></TD>
    <TD>表明过程调用表是无效的 .</TD></TR>
  <TR>
    <TD><CODE>WSAEINVALIDPROVIDER</CODE></TD>
    <TD>表明无效的服务提供者 .</TD></TR>
  <TR>
    <TD><CODE>WSAEPROVIDERFAILEDINIT</CODE></TD>
    <TD>表明服务提供者初始化失败 .</TD></TR>
  <TR>
    <TD><CODE>WSASYSCALLFAILURE</CODE></TD>
    <TD>表明系统调用失败 .</TD></TR>
  <TR>
    <TD><CODE>WSASERVICE_NOT_FOUND</CODE></TD>
    <TD>表明服务没有被找到 .</TD></TR>
  <TR>
    <TD><CODE>WSATYPE_NOT_FOUND</CODE></TD>
    <TD>表明类类型没有被找到 .</TD></TR>
  <TR>
    <TD><CODE>WSA_E_NO_MORE</CODE></TD>
    <TD>表明没有更多的结果 .</TD></TR>
  <TR>
    <TD><CODE>WSA_E_CANCELLED</CODE></TD>
    <TD>表明调用被取消 .</TD></TR>
  <TR>
    <TD><CODE>WSAEREFUSED</CODE></TD>
    <TD>表明数据库请求被拒绝 .</TD></TR></TBODY></TABLE>
<H3>libuv 常量<SPAN><A class="mark" id="os_libuv_constants" href="http://nodejs.cn/api/os.html#os_libuv_constants">#</A></SPAN></H3>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/os.html#os_libuv_constants">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/os/libuv_constants.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<TABLE>
  <TBODY>
  <TR>
    <TH>常量</TH>
    <TH>描述</TH></TR>
  <TR>
    <TD><CODE>UV_UDP_REUSEADDR</CODE></TD>
    <TD></TD></TR></TBODY></TABLE></DIV></DIV></DIV><!-- 搜索弹窗 -->   
<DIV id="modal_search_bg"></DIV>
<DIV 
id="modal_search"><INPUT id="modal_search_input" placeholder="API 快速搜索" value=""> 
    
<DIV id="modal_search_result"></DIV></DIV><!-- js -->   <!--[if lt IE 10]><script src="/static/lib/placeholders.js?20170426"></script><![endif]--> 
  
<SCRIPT src="os%20%20Node_js%20API%20文档_files/api.js"></SCRIPT>
 </BODY></HTML>
