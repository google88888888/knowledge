<!DOCTYPE HTML>
<!-- saved from url=(0029)http://nodejs.cn/api/dns.html -->
<!DOCTYPE html PUBLIC "" ""><HTML lang="zh-cmn-Hans"><HEAD><META 
content="IE=11.0000" http-equiv="X-UA-Compatible">
   
<META charset="utf-8">   <TITLE>dns | Node.js API 文档</TITLE>   <LINK href="dns%20%20Node_js%20API%20文档_files/api.css" 
rel="stylesheet">   <LINK href="/static/favicon.png" rel="icon" type="image/png" 
sizes="32x32"> 
<META name="GENERATOR" content="MSHTML 11.00.9600.18639"></HEAD> 
<BODY class="alt apidoc" id="api-section-dns">
<DIV class="clearfix" id="content">
<DIV class="interior" id="column2">
<DIV class="interior" id="intro"><A href="http://nodejs.cn/">          Node.js 
中文网         </A>         
<DIV><INPUT id="search_input" placeholder="API 快速搜索" value="">         
</DIV></DIV>
<UL>
  <LI><A class="nav-documentation" href="http://nodejs.cn/api/documentation.html">关于本文档</A></LI>
  <LI><A class="nav-synopsis" 
  href="http://nodejs.cn/api/synopsis.html">用法与例子</A></LI></UL>
<DIV class="line"></DIV>
<UL>
  <LI><A class="nav-assert" href="http://nodejs.cn/api/assert.html">Assert 
  (断言)</A></LI>
  <LI><A class="nav-buffer" 
  href="http://nodejs.cn/api/buffer.html">Buffer</A></LI>
  <LI><A class="nav-addons" href="http://nodejs.cn/api/addons.html">C/C++ 
  插件</A></LI>
  <LI><A class="nav-child_process" href="http://nodejs.cn/api/child_process.html">Child 
  Processes (子进程)</A></LI>
  <LI><A class="nav-cluster" href="http://nodejs.cn/api/cluster.html">Cluster 
  (集群)</A></LI>
  <LI><A class="nav-cli" href="http://nodejs.cn/api/cli.html">CLI 
  (命令行选项)</A></LI>
  <LI><A class="nav-console" href="http://nodejs.cn/api/console.html">Console 
  (控制台)</A></LI>
  <LI><A class="nav-crypto" href="http://nodejs.cn/api/crypto.html">Crypto 
  (加密)</A></LI>
  <LI><A class="nav-debugger" href="http://nodejs.cn/api/debugger.html">Debugger 
  (调试器)</A></LI>
  <LI><A class="nav-dns active" href="http://nodejs.cn/api/dns.html">DNS 
  (域名服务器)</A></LI>
  <LI><A class="nav-domain" href="http://nodejs.cn/api/domain.html">Domain 
  (域)</A></LI>
  <LI><A class="nav-errors" href="http://nodejs.cn/api/errors.html">Error 
  (错误)</A></LI>
  <LI><A class="nav-events" href="http://nodejs.cn/api/events.html">Events 
  (事件)</A></LI>
  <LI><A class="nav-fs" href="http://nodejs.cn/api/fs.html">File System 
  (文件系统)</A></LI>
  <LI><A class="nav-globals" href="http://nodejs.cn/api/globals.html">Global 
  (全局变量)</A></LI>
  <LI><A class="nav-http" href="http://nodejs.cn/api/http.html">HTTP</A></LI>
  <LI><A class="nav-https" href="http://nodejs.cn/api/https.html">HTTPS</A></LI>
  <LI><A class="nav-modules" href="http://nodejs.cn/api/modules.html">Module 
  (模块)</A></LI>
  <LI><A class="nav-net" href="http://nodejs.cn/api/net.html">Net (网络)</A></LI>
  <LI><A class="nav-os" href="http://nodejs.cn/api/os.html">OS (操作系统)</A></LI>
  <LI><A class="nav-path" href="http://nodejs.cn/api/path.html">Path 
  (路径)</A></LI>
  <LI><A class="nav-process" href="http://nodejs.cn/api/process.html">Process 
  (进程)</A></LI>
  <LI><A class="nav-punycode" 
  href="http://nodejs.cn/api/punycode.html">Punycode</A></LI>
  <LI><A class="nav-querystring" 
  href="http://nodejs.cn/api/querystring.html">Query Strings (查询字符串)</A></LI>
  <LI><A class="nav-readline" href="http://nodejs.cn/api/readline.html">Readline 
  (逐行读取)</A></LI>
  <LI><A class="nav-repl" href="http://nodejs.cn/api/repl.html">REPL 
  (交互式解释器)</A></LI>
  <LI><A class="nav-stream" href="http://nodejs.cn/api/stream.html">Stream 
  (流)</A></LI>
  <LI><A class="nav-string_decoder" href="http://nodejs.cn/api/string_decoder.html">String 
  Decoder (字符串解码器)</A></LI>
  <LI><A class="nav-timers" href="http://nodejs.cn/api/timers.html">Timer 
  (定时器)</A></LI>
  <LI><A class="nav-tls" href="http://nodejs.cn/api/tls.html">TLS 
  (安全传输层)</A></LI>
  <LI><A class="nav-tty" href="http://nodejs.cn/api/tty.html">TTY (终端)</A></LI>
  <LI><A class="nav-dgram" href="http://nodejs.cn/api/dgram.html">UDP/Datagram 
  (数据报)</A></LI>
  <LI><A class="nav-url" href="http://nodejs.cn/api/url.html">URL</A></LI>
  <LI><A class="nav-util" href="http://nodejs.cn/api/util.html">Util 
  (实用工具)</A></LI>
  <LI><A class="nav-v8" href="http://nodejs.cn/api/v8.html">V8</A></LI>
  <LI><A class="nav-vm" href="http://nodejs.cn/api/vm.html">VM (虚拟机)</A></LI>
  <LI><A class="nav-zlib" href="http://nodejs.cn/api/zlib.html">ZLIB 
  (压缩)</A></LI></UL>
<DIV class="line"></DIV></DIV>
<DIV class="interior" id="column1" data-id="dns"><HEADER>
<H1>Node.js v6.10.3 文档</H1>
<DIV id="gtoc">
<P><A name="toc" href="http://nodejs.cn/api/">返回文档首页</A>             <!--<a href="/api/all.html">单页面显示</a> |--> 
            <!--<a href="/api/dns.json">JSON格式</a> |-->             <!--<a href="/api/en/dns.html">查看英文版</a>--> 
          </P></DIV>
<HR>
</HEADER>
<DIV id="toc">
<H2>目录</H2>
<UL>
  <LI><SPAN class="stability_2"><A 
  href="http://nodejs.cn/api/dns.html#dns_dns">DNS</A></SPAN>
  <UL> 
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_getservers">dns.getServers()</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback">dns.lookup(hostname[, 
    options], callback)</A></SPAN>
    <UL> 
      <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_supported_getaddrinfo_flags">Supported 
      getaddrinfo flags</A></SPAN></LI></UL></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_lookupservice_address_port_callback">dns.lookupService(address, 
    port, callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolve_hostname_rrtype_callback">dns.resolve(hostname[, 
    rrtype], callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolve4_hostname_callback">dns.resolve4(hostname, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolve6_hostname_callback">dns.resolve6(hostname, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolvecname_hostname_callback">dns.resolveCname(hostname, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolvemx_hostname_callback">dns.resolveMx(hostname, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolvenaptr_hostname_callback">dns.resolveNaptr(hostname, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolvens_hostname_callback">dns.resolveNs(hostname, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolvesoa_hostname_callback">dns.resolveSoa(hostname, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolvesrv_hostname_callback">dns.resolveSrv(hostname, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolveptr_hostname_callback">dns.resolvePtr(hostname, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolvetxt_hostname_callback">dns.resolveTxt(hostname, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_reverse_ip_callback">dns.reverse(ip, 
    callback)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_setservers_servers">dns.setServers(servers)</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_error_codes">Error 
    codes</A></SPAN></LI>
    <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_implementation_considerations">Implementation 
    considerations</A></SPAN>
    <UL> 
      <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_lookup"><CODE>dns.lookup()</CODE></A></SPAN></LI>
      <LI><SPAN class="stability_undefined"><A href="http://nodejs.cn/api/dns.html#dns_dns_resolve_dns_resolve_and_dns_reverse"><CODE>dns.resolve()</CODE>, 
      <CODE>dns.resolve*()</CODE> and 
    <CODE>dns.reverse()</CODE></A></SPAN></LI></UL></LI></UL></LI></UL></DIV>
<DIV id="apicontent">
<H1>DNS<SPAN><A class="mark" id="dns_dns" href="http://nodejs.cn/api/dns.html#dns_dns">#</A></SPAN></H1>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<PRE class="api_stability api_stability_2"><A href="http://nodejs.cn/api/documentation.html#documentation_stability_index">Stability: 2</A> - Stable</PRE>
<P>The <CODE>dns</CODE> module contains functions belonging to two different 
categories:</P>
<P>1) Functions that use the underlying operating system facilities to perform
 name resolution, and that do not necessarily perform any network communication.
 This category contains only one function: <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A>. 
<STRONG>Developers looking to perform name resolution in the same way that other 
applications on the same operating system behave should use <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A>.</STRONG></P>
<P>For example, looking up <CODE>iana.org</CODE>.</P>
<PRE><CODE class="lang-js">const dns = require('dns');

dns.lookup('nodejs.org', (err, addresses, family) =&gt; {
  console.log('addresses:', addresses);
});
// address: "192.0.43.8" family: IPv4
</CODE></PRE>
<P>2) Functions that connect to an actual DNS server to perform name resolution,
 and that <EM>always</EM> use the network to perform DNS queries. This category
 contains all functions in the <CODE>dns</CODE> module <EM>except</EM> <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A>. 
These functions do not use the same set of configuration files used by <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A> 
(e.g. <CODE>/etc/hosts</CODE>). These functions should be used by developers who 
do not want to use the underlying operating system's facilities for name 
resolution, and instead want to <EM>always</EM> perform DNS queries.</P>
<P>Below is an example that resolves <CODE>'archive.org'</CODE> then reverse 
resolves the IP addresses that are returned.</P>
<PRE><CODE class="lang-js">const dns = require('dns');

dns.resolve4('archive.org', (err, addresses) =&gt; {
  if (err) throw err;

  console.log(`addresses: ${JSON.stringify(addresses)}`);

  addresses.forEach((a) =&gt; {
    dns.reverse(a, (err, hostnames) =&gt; {
      if (err) {
        throw err;
      }
      console.log(`reverse for ${a}: ${JSON.stringify(hostnames)}`);
    });
  });
});
</CODE></PRE>
<P>There are subtle consequences in choosing one over the other, please consult
 the <A 
href="http://nodejs.cn/api/dns.html#dns_implementation_considerations">Implementation 
considerations section</A> for more information.</P>
<H2>dns.getServers()<SPAN><A class="mark" id="dns_dns_getservers" href="http://nodejs.cn/api/dns.html#dns_dns_getservers">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_getservers">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_getservers.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.11.3</SPAN> </DIV>
<P>Returns an array of IP address strings that are being used for name
 resolution.</P>
<H2>dns.lookup(hostname[, options], callback)<SPAN><A class="mark" id="dns_dns_lookup_hostname_options_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_lookup_hostname_options_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_lookup_hostname_options_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.1.90</SPAN> </DIV>
<P>Resolves a hostname (e.g. <CODE>'nodejs.org'</CODE>) into the first found A 
(IPv4) or AAAA (IPv6) record. <CODE>options</CODE> can be an object or integer. 
If <CODE>options</CODE> is not provided, then IPv4 and IPv6 addresses are both 
valid. If <CODE>options</CODE> is an integer, then it must be <CODE>4</CODE> or 
<CODE>6</CODE>.</P>
<P>Alternatively, <CODE>options</CODE> can be an object containing these 
properties:</P>
<UL>
  <LI><CODE>family</CODE> <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type">&lt;Number&gt;</A> 
  - The record family. If present, must be the integer <CODE>4</CODE> or 
  <CODE>6</CODE>. If not provided, both IP v4 and v6 addresses are 
accepted.</LI>
  <LI><CODE>hints</CODE>: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type">&lt;Number&gt;</A> 
  - If present, it should be one or more of the supported 
  <CODE>getaddrinfo</CODE> flags. If <CODE>hints</CODE> is not provided, then no 
  flags are passed to <CODE>getaddrinfo</CODE>. Multiple flags can be passed 
  through <CODE>hints</CODE> by bitwise <CODE>OR</CODE>ing their values. See <A 
  href="http://nodejs.cn/api/dns.html#dns_supported_getaddrinfo_flags">supported 
  <CODE>getaddrinfo</CODE> flags</A> for more information on supported
   flags.</LI>
  <LI><CODE>all</CODE>: <A class="type" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type">&lt;Boolean&gt;</A> 
  - When <CODE>true</CODE>, the callback returns all resolved addresses in an 
  array, otherwise returns a single address. Defaults to 
<CODE>false</CODE>.</LI></UL>
<P>All properties are optional.</P>
<P>The <CODE>callback</CODE> function has arguments <CODE>(err, address, 
family)</CODE>. <CODE>address</CODE> is a string representation of an IPv4 or 
IPv6 address. <CODE>family</CODE> is either the integer <CODE>4</CODE> or 
<CODE>6</CODE> and denotes the family of <CODE>address</CODE> (not necessarily 
the value initially passed to <CODE>lookup</CODE>).</P>
<P>With the <CODE>all</CODE> option set to <CODE>true</CODE>, the arguments 
change to <CODE>(err, addresses)</CODE>, with <CODE>addresses</CODE> being an 
array of objects with the properties <CODE>address</CODE> and 
<CODE>family</CODE>.</P>
<P>On error, <CODE>err</CODE> is an <A href="http://nodejs.cn/api/errors.html#errors_class_error"><CODE>Error</CODE></A> 
object, where <CODE>err.code</CODE> is the error code. Keep in mind that 
<CODE>err.code</CODE> will be set to <CODE>'ENOENT'</CODE> not only when the 
hostname does not exist but also when the lookup fails in other ways such as no 
available file descriptors.</P>
<P><CODE>dns.lookup()</CODE> does not necessarily have anything to do with the 
DNS protocol. The implementation uses an operating system facility that can 
associate names with addresses, and vice versa. This implementation can have 
subtle but important consequences on the behavior of any Node.js program. Please 
take some time to consult the <A href="http://nodejs.cn/api/dns.html#dns_implementation_considerations">Implementation 
considerations section</A> before using <CODE>dns.lookup()</CODE>.</P>
<P>Example usage:</P>
<PRE><CODE class="lang-js">const dns = require('dns');
const options = {
  family: 6,
  hints: dns.ADDRCONFIG | dns.V4MAPPED,
};
dns.lookup('example.com', options, (err, address, family) =&gt;
  console.log('address: %j family: IPv%s', address, family));
// address: "2606:2800:220:1:248:1893:25c8:1946" family: IPv6

// When options.all is true, the result will be an Array.
options.all = true;
dns.lookup('example.com', options, (err, addresses) =&gt;
  console.log('addresses: %j', addresses));
// addresses: [{"address":"2606:2800:220:1:248:1893:25c8:1946","family":6}]
</CODE></PRE>
<H3>Supported getaddrinfo flags<SPAN><A class="mark" id="dns_supported_getaddrinfo_flags" 
href="http://nodejs.cn/api/dns.html#dns_supported_getaddrinfo_flags">#</A></SPAN></H3>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_supported_getaddrinfo_flags">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/supported_getaddrinfo_flags.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<P>The following flags can be passed as hints to <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A>.</P>
<UL>
  <LI><CODE>dns.ADDRCONFIG</CODE>: Returned address types are determined by the 
  types of addresses supported by the current system. For example, IPv4 
  addresses are only returned if the current system has at least one IPv4 
  address configured. Loopback addresses are not considered.</LI>
  <LI><CODE>dns.V4MAPPED</CODE>: If the IPv6 family was specified, but no IPv6 
  addresses were found, then return IPv4 mapped IPv6 addresses. Note that it is 
  not supported on some operating systems (e.g FreeBSD 10.1).</LI></UL>
<H2>dns.lookupService(address, port, callback)<SPAN><A class="mark" id="dns_dns_lookupservice_address_port_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_lookupservice_address_port_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_lookupservice_address_port_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_lookupservice_address_port_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.11.14</SPAN> </DIV>
<P>Resolves the given <CODE>address</CODE> and <CODE>port</CODE> into a hostname 
and service using the operating system's underlying <CODE>getnameinfo</CODE> 
implementation.</P>
<P>If <CODE>address</CODE> is not a valid IP address, a <CODE>TypeError</CODE> 
will be thrown. The <CODE>port</CODE> will be coerced to a number. If it is not 
a legal port, a <CODE>TypeError</CODE> will be thrown.</P>
<P>The callback has arguments <CODE>(err, hostname, service)</CODE>. The 
<CODE>hostname</CODE> and <CODE>service</CODE> arguments are strings (e.g. 
<CODE>'localhost'</CODE> and <CODE>'http'</CODE> respectively).</P>
<P>On error, <CODE>err</CODE> is an <A href="http://nodejs.cn/api/errors.html#errors_class_error"><CODE>Error</CODE></A> 
object, where <CODE>err.code</CODE> is the error code.</P>
<PRE><CODE class="lang-js">const dns = require('dns');
dns.lookupService('127.0.0.1', 22, (err, hostname, service) =&gt; {
  console.log(hostname, service);
  // Prints: localhost ssh
});
</CODE></PRE>
<H2>dns.resolve(hostname[, rrtype], callback)<SPAN><A class="mark" id="dns_dns_resolve_hostname_rrtype_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolve_hostname_rrtype_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolve_hostname_rrtype_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolve_hostname_rrtype_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.1.27</SPAN> </DIV>
<P>Uses the DNS protocol to resolve a hostname (e.g. <CODE>'nodejs.org'</CODE>) 
into an array of the record types specified by <CODE>rrtype</CODE>.</P>
<P>Valid values for <CODE>rrtype</CODE> are:</P>
<UL>
  <LI><CODE>'A'</CODE> - IPV4 addresses, default</LI>
  <LI><CODE>'AAAA'</CODE> - IPV6 addresses</LI>
  <LI><CODE>'MX'</CODE> - mail exchange records</LI>
  <LI><CODE>'TXT'</CODE> - text records</LI>
  <LI><CODE>'SRV'</CODE> - SRV records</LI>
  <LI><CODE>'PTR'</CODE> - PTR records</LI>
  <LI><CODE>'NS'</CODE> - name server records</LI>
  <LI><CODE>'CNAME'</CODE> - canonical name records</LI>
  <LI><CODE>'SOA'</CODE> - start of authority record</LI>
  <LI><CODE>'NAPTR'</CODE> - name authority pointer record</LI></UL>
<P>The <CODE>callback</CODE> function has arguments <CODE>(err, 
addresses)</CODE>. When successful, <CODE>addresses</CODE> will be an array, 
except when resolving an SOA record which returns an object structured in the 
same manner as one returned by the <A href="http://nodejs.cn/api/dns.html#dns_dns_resolvesoa_hostname_callback"><CODE>dns.resolveSoa()</CODE></A> 
method. The type of each item in <CODE>addresses</CODE> is determined by the 
record type, and described in the documentation for the corresponding lookup 
methods.</P>
<P>On error, <CODE>err</CODE> is an <A href="http://nodejs.cn/api/errors.html#errors_class_error"><CODE>Error</CODE></A> 
object, where <CODE>err.code</CODE> is one of the error codes listed <A href="http://nodejs.cn/api/dns.html#dns_error_codes">here</A>.</P>
<H2>dns.resolve4(hostname, callback)<SPAN><A class="mark" id="dns_dns_resolve4_hostname_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolve4_hostname_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolve4_hostname_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolve4_hostname_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.1.16</SPAN> </DIV>
<P>Uses the DNS protocol to resolve a IPv4 addresses (<CODE>A</CODE> records) 
for the <CODE>hostname</CODE>. The <CODE>addresses</CODE> argument passed to the 
<CODE>callback</CODE> function will contain an array of IPv4 addresses (e.g. 
<CODE>['74.125.79.104', '74.125.79.105', '74.125.79.106']</CODE>).</P>
<H2>dns.resolve6(hostname, callback)<SPAN><A class="mark" id="dns_dns_resolve6_hostname_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolve6_hostname_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolve6_hostname_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolve6_hostname_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.1.16</SPAN> </DIV>
<P>Uses the DNS protocol to resolve a IPv6 addresses (<CODE>AAAA</CODE> records) 
for the <CODE>hostname</CODE>. The <CODE>addresses</CODE> argument passed to the 
<CODE>callback</CODE> function will contain an array of IPv6 addresses.</P>
<H2>dns.resolveCname(hostname, callback)<SPAN><A class="mark" id="dns_dns_resolvecname_hostname_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolvecname_hostname_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolvecname_hostname_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolvecname_hostname_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.3.2</SPAN> </DIV>
<P>Uses the DNS protocol to resolve <CODE>CNAME</CODE> records for the 
<CODE>hostname</CODE>. The <CODE>addresses</CODE> argument passed to the 
<CODE>callback</CODE> function will contain an array of canonical name records 
available for the <CODE>hostname</CODE> (e.g. 
<CODE>['bar.example.com']</CODE>).</P>
<H2>dns.resolveMx(hostname, callback)<SPAN><A class="mark" id="dns_dns_resolvemx_hostname_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolvemx_hostname_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolvemx_hostname_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolvemx_hostname_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.1.27</SPAN> </DIV>
<P>Uses the DNS protocol to resolve mail exchange records (<CODE>MX</CODE> 
records) for the <CODE>hostname</CODE>. The <CODE>addresses</CODE> argument 
passed to the <CODE>callback</CODE> function will contain an array of objects 
containing both a <CODE>priority</CODE> and <CODE>exchange</CODE> property (e.g. 
<CODE>[{priority: 10, exchange: 'mx.example.com'}, ...]</CODE>).</P>
<H2>dns.resolveNaptr(hostname, callback)<SPAN><A class="mark" id="dns_dns_resolvenaptr_hostname_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolvenaptr_hostname_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolvenaptr_hostname_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolvenaptr_hostname_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.9.12</SPAN> </DIV>
<P>Uses the DNS protocol to resolve regular expression based records 
(<CODE>NAPTR</CODE> records) for the <CODE>hostname</CODE>. The 
<CODE>callback</CODE> function has arguments <CODE>(err, addresses)</CODE>.  The 
<CODE>addresses</CODE> argument passed to the <CODE>callback</CODE> function
 will contain an array of objects with the following properties:</P>
<UL>
  <LI><CODE>flags</CODE></LI>
  <LI><CODE>service</CODE></LI>
  <LI><CODE>regexp</CODE></LI>
  <LI><CODE>replacement</CODE></LI>
  <LI><CODE>order</CODE></LI>
  <LI><CODE>preference</CODE></LI></UL>
<P>For example:</P>
<PRE><CODE class="lang-js">{
  flags: 's',
  service: 'SIP+D2U',
  regexp: '',
  replacement: '_sip._udp.example.com',
  order: 30,
  preference: 100
}
</CODE></PRE>
<H2>dns.resolveNs(hostname, callback)<SPAN><A class="mark" id="dns_dns_resolvens_hostname_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolvens_hostname_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolvens_hostname_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolvens_hostname_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.1.90</SPAN> </DIV>
<P>Uses the DNS protocol to resolve name server records (<CODE>NS</CODE> 
records) for the <CODE>hostname</CODE>. The <CODE>addresses</CODE> argument 
passed to the <CODE>callback</CODE> function will contain an array of name 
server records available for <CODE>hostname</CODE> (e.g. 
<CODE>['ns1.example.com', 'ns2.example.com']</CODE>).</P>
<H2>dns.resolveSoa(hostname, callback)<SPAN><A class="mark" id="dns_dns_resolvesoa_hostname_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolvesoa_hostname_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolvesoa_hostname_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolvesoa_hostname_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.11.10</SPAN> </DIV>
<P>Uses the DNS protocol to resolve a start of authority record 
(<CODE>SOA</CODE> record) for the <CODE>hostname</CODE>. The 
<CODE>addresses</CODE> argument passed to the <CODE>callback</CODE> function 
will be an object with the following properties:</P>
<UL>
  <LI><CODE>nsname</CODE></LI>
  <LI><CODE>hostmaster</CODE></LI>
  <LI><CODE>serial</CODE></LI>
  <LI><CODE>refresh</CODE></LI>
  <LI><CODE>retry</CODE></LI>
  <LI><CODE>expire</CODE></LI>
  <LI><CODE>minttl</CODE></LI></UL>
<PRE><CODE class="lang-js">{
  nsname: 'ns.example.com',
  hostmaster: 'root.example.com',
  serial: 2013101809,
  refresh: 10000,
  retry: 2400,
  expire: 604800,
  minttl: 3600
}
</CODE></PRE>
<H2>dns.resolveSrv(hostname, callback)<SPAN><A class="mark" id="dns_dns_resolvesrv_hostname_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolvesrv_hostname_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolvesrv_hostname_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolvesrv_hostname_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.1.27</SPAN> </DIV>
<P>Uses the DNS protocol to resolve service records (<CODE>SRV</CODE> records) 
for the <CODE>hostname</CODE>. The <CODE>addresses</CODE> argument passed to the 
<CODE>callback</CODE> function will be an array of objects with the following 
properties:</P>
<UL>
  <LI><CODE>priority</CODE></LI>
  <LI><CODE>weight</CODE></LI>
  <LI><CODE>port</CODE></LI>
  <LI><CODE>name</CODE></LI></UL>
<PRE><CODE class="lang-js">{
  priority: 10,
  weight: 5,
  port: 21223,
  name: 'service.example.com'
}
</CODE></PRE>
<H2>dns.resolvePtr(hostname, callback)<SPAN><A class="mark" id="dns_dns_resolveptr_hostname_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolveptr_hostname_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolveptr_hostname_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolveptr_hostname_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v6.0.0</SPAN> </DIV>
<P>Uses the DNS protocol to resolve pointer records (<CODE>PTR</CODE> records) 
for the <CODE>hostname</CODE>. The <CODE>addresses</CODE> argument passed to the 
<CODE>callback</CODE> function will be an array of strings containing the reply 
records.</P>
<H2>dns.resolveTxt(hostname, callback)<SPAN><A class="mark" id="dns_dns_resolvetxt_hostname_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolvetxt_hostname_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolvetxt_hostname_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolvetxt_hostname_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.1.27</SPAN> </DIV>
<P>Uses the DNS protocol to resolve text queries (<CODE>TXT</CODE> records) for 
the <CODE>hostname</CODE>. The <CODE>addresses</CODE> argument passed to the 
<CODE>callback</CODE> function is is a two-dimensional array of the text records 
available for <CODE>hostname</CODE> (e.g., <CODE>[ ['v=spf1 ip4:0.0.0.0 ', 
'~all' ] ]</CODE>). Each sub-array contains TXT chunks of one record. Depending 
on the use case, these could be either joined together or treated 
separately.</P>
<H2>dns.reverse(ip, callback)<SPAN><A class="mark" id="dns_dns_reverse_ip_callback" 
href="http://nodejs.cn/api/dns.html#dns_dns_reverse_ip_callback">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_reverse_ip_callback">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_reverse_ip_callback.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.1.16</SPAN> </DIV>
<P>Performs a reverse DNS query that resolves an IPv4 or IPv6 address to an
 array of hostnames.</P>
<P>The <CODE>callback</CODE> function has arguments <CODE>(err, 
hostnames)</CODE>, where <CODE>hostnames</CODE> is an array of resolved 
hostnames for the given <CODE>ip</CODE>.</P>
<P>On error, <CODE>err</CODE> is an <A href="http://nodejs.cn/api/errors.html#errors_class_error"><CODE>Error</CODE></A> 
object, where <CODE>err.code</CODE> is one of the <A href="http://nodejs.cn/api/dns.html#dns_error_codes">DNS 
error codes</A>.</P>
<H2>dns.setServers(servers)<SPAN><A class="mark" id="dns_dns_setservers_servers" 
href="http://nodejs.cn/api/dns.html#dns_dns_setservers_servers">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_setservers_servers">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_setservers_servers.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<DIV class="api_metadata"><SPAN>新增于: v0.11.3</SPAN> </DIV>
<P>Sets the IP addresses of the servers to be used when resolving. The 
<CODE>servers</CODE> argument is an array of IPv4 or IPv6 addresses.</P>
<P>If a port specified on the address it will be removed.</P>
<P>An error will be thrown if an invalid address is provided.</P>
<P>The <CODE>dns.setServers()</CODE> method must not be called while a DNS query 
is in progress.</P>
<H2>Error codes<SPAN><A class="mark" id="dns_error_codes" href="http://nodejs.cn/api/dns.html#dns_error_codes">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_error_codes">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/error_codes.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<P>Each DNS query can return one of the following error codes:</P>
<UL>
  <LI><CODE>dns.NODATA</CODE>: DNS server returned answer with no data.</LI>
  <LI><CODE>dns.FORMERR</CODE>: DNS server claims query was misformatted.</LI>
  <LI><CODE>dns.SERVFAIL</CODE>: DNS server returned general failure.</LI>
  <LI><CODE>dns.NOTFOUND</CODE>: Domain name not found.</LI>
  <LI><CODE>dns.NOTIMP</CODE>: DNS server does not implement requested 
  operation.</LI>
  <LI><CODE>dns.REFUSED</CODE>: DNS server refused query.</LI>
  <LI><CODE>dns.BADQUERY</CODE>: Misformatted DNS query.</LI>
  <LI><CODE>dns.BADNAME</CODE>: Misformatted hostname.</LI>
  <LI><CODE>dns.BADFAMILY</CODE>: Unsupported address family.</LI>
  <LI><CODE>dns.BADRESP</CODE>: Misformatted DNS reply.</LI>
  <LI><CODE>dns.CONNREFUSED</CODE>: Could not contact DNS servers.</LI>
  <LI><CODE>dns.TIMEOUT</CODE>: Timeout while contacting DNS servers.</LI>
  <LI><CODE>dns.EOF</CODE>: End of file.</LI>
  <LI><CODE>dns.FILE</CODE>: Error reading file.</LI>
  <LI><CODE>dns.NOMEM</CODE>: Out of memory.</LI>
  <LI><CODE>dns.DESTRUCTION</CODE>: Channel is being destroyed.</LI>
  <LI><CODE>dns.BADSTR</CODE>: Misformatted string.</LI>
  <LI><CODE>dns.BADFLAGS</CODE>: Illegal flags specified.</LI>
  <LI><CODE>dns.NONAME</CODE>: Given hostname is not numeric.</LI>
  <LI><CODE>dns.BADHINTS</CODE>: Illegal hints flags specified.</LI>
  <LI><CODE>dns.NOTINITIALIZED</CODE>: c-ares library initialization not yet 
  performed.</LI>
  <LI><CODE>dns.LOADIPHLPAPI</CODE>: Error loading iphlpapi.dll.</LI>
  <LI><CODE>dns.ADDRGETNETWORKPARAMS</CODE>: Could not find GetNetworkParams 
  function.</LI>
  <LI><CODE>dns.CANCELLED</CODE>: DNS query cancelled.</LI></UL>
<H2>Implementation considerations<SPAN><A class="mark" id="dns_implementation_considerations" 
href="http://nodejs.cn/api/dns.html#dns_implementation_considerations">#</A></SPAN></H2>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_implementation_considerations">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/implementation_considerations.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<P>Although <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A> 
and the various <CODE>dns.resolve*()/dns.reverse()</CODE> functions have the 
same goal of associating a network name with a network address (or vice versa), 
their behavior is quite different. These differences can have subtle but 
significant consequences on the behavior of Node.js programs.</P>
<H3><CODE>dns.lookup()</CODE><SPAN><A class="mark" id="dns_dns_lookup" href="http://nodejs.cn/api/dns.html#dns_dns_lookup">#</A></SPAN></H3>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_lookup">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_lookup.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<P>Under the hood, <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A> 
uses the same operating system facilities as most other programs. For instance, 
<A 
href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A> 
will almost always resolve a given name the same way as the <CODE>ping</CODE> 
command. On most POSIX-like operating systems, the behavior of the <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A> 
function can be modified by changing settings in <A href="http://man7.org/linux/man-pages/man5/nsswitch.conf.5.html">nsswitch.conf(5)</A> 
and/or <A 
href="http://man7.org/linux/man-pages/man5/resolv.conf.5.html">resolv.conf(5)</A>,
 but note that changing these files will change the behavior of <EM>all other
 programs running on the same operating system</EM>.</P>
<P>Though the call to <CODE>dns.lookup()</CODE> will be asynchronous from 
JavaScript's perspective, it is implemented as a synchronous call to <A href="http://man7.org/linux/man-pages/man3/getaddrinfo.3.html">getaddrinfo(3)</A> 
that runs on libuv's threadpool. Because libuv's threadpool has a fixed size, it
 means that if for whatever reason the call to <A href="http://man7.org/linux/man-pages/man3/getaddrinfo.3.html">getaddrinfo(3)</A> 
takes a long time, other operations that could run on libuv's threadpool (such 
as filesystem operations) will experience degraded performance. In order to 
mitigate this issue, one potential solution is to increase the size of libuv's 
threadpool by setting the <CODE>'UV_THREADPOOL_SIZE'</CODE> environment variable 
to a value greater than <CODE>4</CODE> (its current default value). For more 
information on libuv's threadpool, see <A href="http://docs.libuv.org/en/latest/threadpool.html">the 
official libuv documentation</A>.</P>
<H3><CODE>dns.resolve()</CODE>, <CODE>dns.resolve*()</CODE> and 
<CODE>dns.reverse()</CODE><SPAN><A class="mark" id="dns_dns_resolve_dns_resolve_and_dns_reverse" 
href="http://nodejs.cn/api/dns.html#dns_dns_resolve_dns_resolve_and_dns_reverse">#</A></SPAN></H3>
<P style="font-size: 12px; margin-top: -1em;"><A href="http://nodejs.cn/api/en/dns.html#dns_dns_resolve_dns_resolve_and_dns_reverse">查看英文版</A> 
/ <A href="https://github.com/nodejscn/node-api-cn/edit/master/dns/dns_resolve_dns_resolve_and_dns_reverse.md" 
target="_blank" rel="nofollow">参与翻译</A></P>
<P>These functions are implemented quite differently than <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A>. 
They do not use <A href="http://man7.org/linux/man-pages/man3/getaddrinfo.3.html">getaddrinfo(3)</A> 
and they <EM>always</EM> perform a DNS query on the network. This network 
communication is always done asynchronously, and does not use libuv's 
threadpool.</P>
<P>As a result, these functions cannot have the same negative impact on other
 processing that happens on libuv's threadpool that <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A> 
can have.</P>
<P>They do not use the same set of configuration files than what <A href="http://nodejs.cn/api/dns.html#dns_dns_lookup_hostname_options_callback"><CODE>dns.lookup()</CODE></A>
 uses. For instance, <EM>they do not use the configuration from 
<CODE>/etc/hosts</CODE></EM>.</P></DIV></DIV></DIV><!-- 搜索弹窗 -->   
<DIV id="modal_search_bg"></DIV>
<DIV 
id="modal_search"><INPUT id="modal_search_input" placeholder="API 快速搜索" value=""> 
    
<DIV id="modal_search_result"></DIV></DIV><!-- js -->   <!--[if lt IE 10]><script src="/static/lib/placeholders.js?20170426"></script><![endif]--> 
  
<SCRIPT src="dns%20%20Node_js%20API%20文档_files/api.js"></SCRIPT>
 </BODY></HTML>
