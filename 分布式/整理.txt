一、Java SDK安装

二、Maven安装

三、IntelliJ IDEA安装

四、IntelliJ IDEA新建SpringBoot的web项目：
（1）File->New->Project->Maven->Next->后续很简单
（2）复制以下代码到pom.xml文件
<?xml version="1.0" encoding="UTF-8"?>  
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  
    <modelVersion>4.0.0</modelVersion>  
    <groupId>com.example</groupId>  
    <artifactId>demo</artifactId>  
    <version>0.0.1-SNAPSHOT</version>  
    <packagingexample>jar</packagingexample>  
    <name>demo</name>  
    <description>Demo project for Spring Boot</description>  
    <parent>  
        <groupId>org.springframework.boot</groupId>  
        <artifactId>spring-boot-starter-parent</artifactId>  
        <version>1.4.0.RELEASE</version>  
        <relativePath/> <!-- lookup parent from repository -->  
    </parent>  
    <properties>  
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>  
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>  
        <java.version>1.8</java.version>  
    </properties>  
    <dependencies>  
        <dependency>  
            <groupId>org.springframework.boot</groupId>  
            <artifactId>spring-boot-starter-web</artifactId>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework.boot</groupId>  
            <artifactId>spring-boot-starter-test</artifactId>  
            <scope>test</scope>  
        </dependency>  
        <dependency>  
            <groupId>org.springframework.boot</groupId>  
            <artifactId>spring-boot-starter-thymeleaf</artifactId>  
        </dependency>  
    </dependencies>  
    <build>  
        <plugins>  
            <plugin>  
                <groupId>org.springframework.boot</groupId>  
                <artifactId>spring-boot-maven-plugin</artifactId>  
            </plugin>  
        </plugins>  
    </build>  
</project>  
（3）左键点击pom.xml->右键点击pom.xml->Maven->Reimport
（4）在resources文件夹下创建application.properties文件，复制以下代码到application.properties文件
server.port=8888  
（5）在resources文件夹下创建templates文件夹，在templates文件夹下创建welcome.html文件，复制以下代码到welcome.html文件
<html>  
<head>  
    <title>Title</title>  
</head>   
<body>  
    <p>welcome page is login.........</p>  
</body>  
</html>
（6）在java文件夹下创建example文件夹，在example文件夹下创建testController.java文件，复制以下代码到testController.java文件
package example;  
import org.springframework.stereotype.Controller;  
import org.springframework.web.bind.annotation.RequestMapping;  
import org.springframework.web.bind.annotation.ResponseBody;  
import java.util.HashMap;  
import java.util.Map;  
@Controller  
public class testController {  
    @RequestMapping("/index")  
    public String index(){  
        return "welcome";  
    }  
}  
（7）在example文件夹下创建testApplication.java文件，复制以下代码到testApplication.java文件
package example;  
import org.springframework.boot.SpringApplication;  
import org.springframework.boot.autoconfigure.SpringBootApplication;  
@SpringBootApplication  
public class testApplication {  
    public static void main(String[] args) {  
        SpringApplication.run(testApplication.class, args);  
    }  
}  
（8）左键点击testApplication->右键点击testApplication->Run 'testApplication'
（9）浏览器打开url为http://localhost:8888/index.html
























































































