主模块
（1）error_log
（2）include
（3）pid是port id
（4）user是指定执行nginx工作进程的用户
（5）worker_processes是工作进程
（6）worker_cpu_affinity是几个工作进程对应几核cpu

事件模块
（1）accept_mutex是惊群问题
（2）multi_accept是告诉nginx收到一个新连接通知后接受尽可能多的连接

（3）worker_connections是
nginx作为http服务器的时候：
max_clients = worker_processes * worker_connections
nginx作为反向代理服务器的时候：
max_clients = worker_processes * worker_connections/4

http核心模块
（1）alias是
location  /a/ {
 alias   /b/;
}
若请求/a/a.html将返回/b/a.html
（2）client_body_in_file_only是请求体被存储到一个文件中，请求结束后，该文件不会被删除，一般调试时用
（3）client_body_buffer_size是请求体使用的buffer的最大值
（4）client_body_temp_path是存储请求体的文件的目录路径
（5）client_body_timeout是请求体的超时时间
（6）client_header_buffer_size是请求头的buffer大小
（16）large_client_header_buffers是当请求头过大，请求头的buffer大小
（7）client_header_timeout是请求头的超时时间
（8）client_max_body_size是能接收的最大请求体的大小
（9）default_type是设置文件使用的默认的MIME-type
（10）error_page是发生错误的时候显示一个预定义的uri
（11）if_modified_since是定义如何比较修改时间和请求头中"If-Modified-Since"时间
（12）index是首页文件名称
（13）internal是指定某个location只能被内部的请求调用，外部的调用请求会返回404
（14）keepAliveTimeout是关闭连接之前，连接器等待另一个HTTP请求的毫秒数
（15）keepalive_requests是在长连接期间可接受的请求数
（）limit_except是限制http方法
（）limit_rate是设置最高下载速度
（）limit_rate_after是设置http请求传输多少字节后开始限速
（）listen
listen 80是监听所有端口为80的ipv4的地址
listen [::]:80是监听所有端口为80的ipv6的地址
（）location
匹配模式及顺序
location = /uri 　　　  精确匹配
location ^~ /uri 　　  前缀匹配，顺序是从长到短
location ~ pattern    区分大小写的正则匹配。
location ~* pattern 　不区分大小写的正则匹配。
location /uri 　　　　  前缀匹配，顺序是从长到短
location /           通用匹配
（）open_file_cache







































































































































