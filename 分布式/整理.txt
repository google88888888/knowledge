一、Apache Maven 概述
二、Apache Maven 环境配置
三、Apache Maven POM
pom.xml是Project Object Model的简称，放在工程根目录下。
pom.xml需要 project 元素和三个必须的字段：groupId,artifactId,version。
在仓库中的工程标识为 groupId:artifactId:version

四、Apache Maven 构建生命周期
Maven 有以下三个标准的生命周期：clean，default(or build)，site。运行某个阶段，其之前的所有阶段都会被运行。

（1）Clean 生命周期包含以下阶段
pre-clean
clean
post-clean

（2）Default (or Build) 生命周期包含以下阶段
validate
initialize
generate-sources
process-sources
generate-resources
process-resources
compile
process-classes
generate-test-sources
process-test-sources
test-compile
process-test-classes
test
prepare-package
package
pre-integration-test
integration-test
post-integration-test
verify
install
deploy

（3）Site 生命周期包含以下阶段
pre-site
site
post-site
site-deploy


五、Apache Maven 构建配置文件
使用构建配置文件，可以为不同的环境定制构建过程
（1）定义在pom.xml中

在 src/main/resources 目录下有三个环境配置文件：
env.properties	    没有配置文件时的默认配置
env.test.properties	               测试配置
env.prod.properties	               产品配置

使用 -P 选项指定 Profile 的名称


六、Apache Maven 仓库
Maven 依赖搜索顺序
（1）本地仓库
（2）中央仓库
（3）远程仓库

七、Apache Maven 插件
执行用mvn [plugin-name]:[goal-name]

八、Apache Maven 创建工程
九、Apache Maven 构建 & 测试工程
十、Apache Maven 外部依赖
在仓库依赖不能满足的情况下，使用外部依赖
在 src 文件夹下添加 lib 文件夹，复制test.jar 文件到 lib 文件夹下
在pom.xml中有：
          <dependency>
             <groupId>test</groupId>
             <artifactId>test</artifactId>
             <scope>system</scope>
             <version>1.0</version>
             <systemPath>${basedir}\src\lib\test.jar</systemPath>
          </dependency>

十一、Apache Maven 工程文档
十二、Apache Maven 工程模版















